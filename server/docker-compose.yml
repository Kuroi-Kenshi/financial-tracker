version: '3.9'

services:
  postgres_db:
    image: postgres:15
    container_name: postgres_db
    hostname: postgres_db
    env_file:
      - .env
    environment:
      - PG_DATA=${POSTGRES_DATA}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    volumes:
      - pgdata:${POSTGRES_DATA}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: unless-stopped
    # networks:
    #   - app-network
    # healthcheck:
    #   test: ['CMD-SHELL', 'pg_isready', '-d', 'db_prod']
    #   interval: 30s
    #   timeout: 60s
    #   retries: 5
    #   start_period: 80s

  fin-tracker:
    container_name: fin-tracker
    hostname: fin-tracker
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: unless-stopped
    # networks:
    #   - app-network
    # links:
    #   - postgres_db
    depends_on:
      - postgres_db

  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - fin-tracker
    restart: always
    # networks:
    #   - app-network
    #   - nginx-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
